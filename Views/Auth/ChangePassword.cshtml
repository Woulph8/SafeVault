@model SafeVault.Models.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-warning text-dark">
                    <h4 class="mb-0">
                        <i class="fas fa-key me-2"></i>Change Password
                    </h4>
                </div>
                <div class="card-body">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }
                    
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <form asp-action="ChangePassword" method="post" class="needs-validation" novalidate>
                        @Html.AntiForgeryToken()
                        
                        <div class="mb-3">
                            <label asp-for="CurrentPassword" class="form-label">
                                <i class="fas fa-lock me-1"></i>@Html.DisplayNameFor(m => m.CurrentPassword)
                            </label>
                            <div class="input-group">
                                <input asp-for="CurrentPassword" class="form-control" placeholder="Enter your current password" required>
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('CurrentPassword')">
                                    <i class="fas fa-eye" id="CurrentPassword-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="CurrentPassword" class="text-danger small"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="NewPassword" class="form-label">
                                <i class="fas fa-key me-1"></i>@Html.DisplayNameFor(m => m.NewPassword)
                            </label>
                            <div class="input-group">
                                <input asp-for="NewPassword" class="form-control" placeholder="Enter your new password" required>
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('NewPassword')">
                                    <i class="fas fa-eye" id="NewPassword-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger small"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>Password must be at least 6 characters long
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ConfirmNewPassword" class="form-label">
                                <i class="fas fa-check me-1"></i>@Html.DisplayNameFor(m => m.ConfirmNewPassword)
                            </label>
                            <div class="input-group">
                                <input asp-for="ConfirmNewPassword" class="form-control" placeholder="Confirm your new password" required>
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('ConfirmNewPassword')">
                                    <i class="fas fa-eye" id="ConfirmNewPassword-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmNewPassword" class="text-danger small"></span>
                        </div>

                        <div class="password-strength mb-3" id="passwordStrength" style="display: none;">
                            <div class="small">Password Strength:</div>
                            <div class="progress" style="height: 8px;">
                                <div id="strengthBar" class="progress-bar" role="progressbar" style="width: 0%"></div>
                            </div>
                            <div id="strengthText" class="small text-muted"></div>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-warning">
                                <i class="fas fa-save me-2"></i>Update Password
                            </button>
                            <a href="javascript:history.back()" class="btn btn-outline-secondary">
                                <i class="fas fa-times me-2"></i>Cancel
                            </a>
                        </div>
                    </form>
                </div>
                
                <div class="card-footer text-muted">
                    <small>
                        <i class="fas fa-shield-alt me-1"></i>
                        Your password is encrypted and stored securely. Make sure to use a strong password.
                    </small>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function togglePassword(fieldName) {
            const field = document.getElementById(fieldName);
            const eye = document.getElementById(fieldName + '-eye');
            
            if (field.type === 'password') {
                field.type = 'text';
                eye.className = 'fas fa-eye-slash';
            } else {
                field.type = 'password';
                eye.className = 'fas fa-eye';
            }
        }

        // Password strength indicator
        document.getElementById('NewPassword').addEventListener('input', function() {
            const password = this.value;
            const strengthContainer = document.getElementById('passwordStrength');
            const strengthBar = document.getElementById('strengthBar');
            const strengthText = document.getElementById('strengthText');
            
            if (password.length === 0) {
                strengthContainer.style.display = 'none';
                return;
            }
            
            strengthContainer.style.display = 'block';
            
            let strength = 0;
            let text = '';
            let color = '';
            
            // Length check
            if (password.length >= 6) strength += 20;
            if (password.length >= 10) strength += 20;
            
            // Character variety checks
            if (/[a-z]/.test(password)) strength += 15;
            if (/[A-Z]/.test(password)) strength += 15;
            if (/[0-9]/.test(password)) strength += 15;
            if (/[^A-Za-z0-9]/.test(password)) strength += 15;
            
            if (strength < 30) {
                text = 'Weak';
                color = 'bg-danger';
            } else if (strength < 60) {
                text = 'Fair';
                color = 'bg-warning';
            } else if (strength < 90) {
                text = 'Good';
                color = 'bg-info';
            } else {
                text = 'Strong';
                color = 'bg-success';
            }
            
            strengthBar.style.width = strength + '%';
            strengthBar.className = 'progress-bar ' + color;
            strengthText.textContent = text;
        });

        // Form validation
        document.querySelector('form').addEventListener('submit', function(e) {
            const newPassword = document.getElementById('NewPassword').value;
            const confirmPassword = document.getElementById('ConfirmNewPassword').value;
            
            if (newPassword !== confirmPassword) {
                e.preventDefault();
                alert('New password and confirmation do not match!');
                return false;
            }
        });
    </script>
}

<style>
    .password-strength {
        margin-top: 0.5rem;
    }
    
    .input-group .btn {
        border-left: none;
    }
    
    .card-footer {
        background-color: rgba(0,0,0,.03);
        border-top: 1px solid rgba(0,0,0,.125);
    }
</style>